{"version":3,"sources":["components/apiHandler.js","components/PokemonCard.js","components/Gameboard.js","App.js","index.js"],"names":["apiHandler","id","a","fetch","mode","response","json","pokemonJSON","status","pokemonObject","name","_","upperFirst","types","type","img","sprites","other","front_default","Error","console","log","getPokemon","PokemanCard","props","useState","setPokemonObject","useEffect","then","x","className","onClick","src","alt","Gameboard","pokemonIdArray","setPokemonIdArray","currentScore","setCurrentScore","topScore","setTopScore","pokemonClickedArray","setPokemonClickedArray","updateCards","map","Math","floor","random","handleClick","event","indexOf","arrayHasDuplicates","currentTarget","updatePokemonClickedArray","Array","fill","round","num","PokemonCard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA2BeA,EAzBK,WAAM,4CACxB,WAA0BC,GAA1B,mBAAAC,EAAA,+EAE2BC,MAAM,qCAAD,OAAsCF,GAAM,CACtEG,KAAM,SAHZ,cAEUC,EAFV,gBAK8BA,EAASC,OALvC,UAKUC,EALV,OAM4B,MAApBF,EAASG,OANjB,wBAOYC,EAAgB,CACpBC,KAAMC,IAAEC,WAAWL,EAAYG,MAC/BT,GAAIM,EAAYN,GAChBY,MAAOF,IAAEC,WAAWL,EAAYM,MAAM,GAAGC,KAAKJ,MAC9CK,IAAKR,EAAYS,QAAQC,MAAM,oBAAoBC,eAX3D,kBAaaT,GAbb,cAeU,IAAIU,MAAM,sBAfpB,kCAiBIC,QAAQC,IAAR,MAjBJ,2DADwB,sBAsBxB,MAAO,CAAEC,WAtBgB,SAAD,oCAAN,GCsBLC,EArBK,SAACC,GAAW,IAAD,EACaC,mBAAS,QADtB,mBACtBhB,EADsB,KACPiB,EADO,KAO7B,OAJAC,qBAAU,WACR3B,EAAWsB,WAAWE,EAAMvB,IAAI2B,MAAK,SAACC,GAAD,OAAOH,EAAiBG,QAC5D,CAACL,EAAMvB,KAELQ,EAID,sBAAKqB,UAAU,eAAeC,QAASP,EAAMO,QAAS9B,GAAIuB,EAAMvB,GAAhE,UACE,qBAAK6B,UAAU,gBAAgBE,IAAKvB,EAAcM,IAAKkB,IAAKT,EAAMvB,KAClE,qBAAK6B,UAAU,eAAf,SAA+BrB,EAAcC,OAC7C,sBAAKoB,UAAU,aAAf,cAA8BrB,EAAcR,MAC5C,qBAAK6B,UAAU,eAAf,SAA+BrB,EAAcI,WAP1C,8CC2DIqB,EAnEG,SAACV,GAAW,IAAD,EACiBC,mBAAS,IAD1B,mBACpBU,EADoB,KACJC,EADI,OAEaX,mBAAS,GAFtB,mBAEpBY,EAFoB,KAENC,EAFM,OAGKb,mBAAS,GAHd,mBAGpBc,EAHoB,KAGVC,EAHU,OAI2Bf,mBAAS,IAJpC,mBAIpBgB,EAJoB,KAICC,EAJD,KAoB3B,SAASC,IACPP,EAAkBD,EAAeS,KAAI,SAACf,GAAD,OAJ9BgB,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAZtB,KAY0C,OAO7D,SAASE,EAAYC,GASrB,IAAqBhD,GACY,IAajC,SAA4BA,GAC1B,OAA4C,IAArCwC,EAAoBS,QAAQjD,GAd/BkD,CADelD,EARPgD,EAAMG,cAAcnD,KAU1BsC,EAAWF,GACbG,EAAYH,GAEdC,EAAgB,GAChBI,EAAuB,MAEvBJ,EAAgBD,EAAe,GAZnC,SAAmCpC,GACjCyC,EAAuB,GAAD,mBAAKD,GAAL,CAA0BxC,KAY9CoD,CAA0BpD,GAC1BmB,QAAQC,IAAIoB,IAjBdE,IAyBF,OA5CAhB,qBAAU,WAERS,EACEkB,MAAM,GACHC,OACAX,KAAI,kBAAMC,KAAKW,MAPH,IAOSX,KAAKE,SAAwB,SAEtD,IAsCD,sBAAKjB,UAAU,4BAAf,UACE,sBAAKA,UAAU,QAAf,4BACkBO,EADlB,eAC4CE,KAE5C,qBAAKT,UAAU,YAAf,SACGK,EAAeS,KAAI,SAACa,GACnB,OACE,cAACC,EAAD,CAAazD,GAAIwD,EAAK1B,QAASiB,GAAkBH,KAAKE,mBCvCnDY,MApBf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,6BACE,qBACEE,IAAI,+FACJC,IAAI,WACJH,UAAU,mBAGd,4GAKA,cAAC,EAAD,QCdN8B,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IADF,OAGAC,SAASC,eAAe,W","file":"static/js/main.0895c5a4.chunk.js","sourcesContent":["import _ from \"lodash\";\n\nconst apiHandler = (() => {\n  async function getPokemon(id) {\n    try {\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`, {\n        mode: \"cors\",\n      });\n      const pokemonJSON = await response.json();\n      if (response.status !== 404) {\n        const pokemonObject = {\n          name: _.upperFirst(pokemonJSON.name), //uses lodash upperFirst method to capitilize first character of name\n          id: pokemonJSON.id,\n          types: _.upperFirst(pokemonJSON.types[0].type.name),\n          img: pokemonJSON.sprites.other[\"official-artwork\"].front_default,\n        };\n        return pokemonObject;\n      }\n      throw new Error(\"Pokemon not found!\");\n    } catch (error) {\n      console.log(error);\n      //displayToDom.handleError();\n    }\n  }\n  return { getPokemon };\n})();\n\nexport default apiHandler;\n","import React, { useEffect, useState } from \"react\";\nimport apiHandler from \"./apiHandler\";\n\nconst PokemanCard = (props) => {\n  const [pokemonObject, setPokemonObject] = useState(\"test\");\n\n  useEffect(() => {\n    apiHandler.getPokemon(props.id).then((x) => setPokemonObject(x));\n  }, [props.id]);\n\n  if (!pokemonObject) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div className=\"pokemon-card\" onClick={props.onClick} id={props.id}>\n        <img className=\"pokemon-image\" src={pokemonObject.img} alt={props.id} />\n        <div className=\"pokemon-name\">{pokemonObject.name}</div>\n        <div className=\"pokemon-id\">#{pokemonObject.id}</div>\n        <div className=\"pokemon-type\">{pokemonObject.types}</div>\n      </div>\n    );\n  }\n};\n\nexport default PokemanCard;\n","import React, { useEffect, useState } from \"react\";\nimport PokemonCard from \"./PokemonCard\";\n\nconst Gameboard = (props) => {\n  const [pokemonIdArray, setPokemonIdArray] = useState([]);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [topScore, setTopScore] = useState(0);\n  const [pokemonClickedArray, setPokemonClickedArray] = useState([]);\n  const pokemonMax = 149;\n\n  useEffect(() => {\n    //random array of 8 integers between 1 and 1+pokemonMax\n    setPokemonIdArray(\n      Array(8)\n        .fill()\n        .map(() => Math.round(Math.random() * pokemonMax + 1))\n    );\n  }, []);\n\n  function getRandomInt() {\n    return Math.floor(Math.random() * Math.floor(pokemonMax) + 1);\n  }\n\n  function updateCards() {\n    setPokemonIdArray(pokemonIdArray.map((x) => getRandomInt(30)));\n  }\n\n  function handleClick(event) {\n    updateScore(event.currentTarget.id);\n    updateCards();\n  }\n\n  function updatePokemonClickedArray(id) {\n    setPokemonClickedArray([...pokemonClickedArray, id]);\n  }\n\n  function updateScore(id) {\n    if (arrayHasDuplicates(id) === true) {\n      if (topScore < currentScore) {\n        setTopScore(currentScore);\n      }\n      setCurrentScore(0);\n      setPokemonClickedArray([]);\n    } else {\n      setCurrentScore(currentScore + 1);\n      updatePokemonClickedArray(id);\n      console.log(pokemonClickedArray);\n    }\n  }\n\n  function arrayHasDuplicates(id) {\n    return pokemonClickedArray.indexOf(id) === -1 ? false : true;\n  }\n\n  return (\n    <div className=\"gameboard-score-container\">\n      <div className=\"score\">\n        Current Score: {currentScore} Top Score: {topScore}\n      </div>\n      <div className=\"gameboard\">\n        {pokemonIdArray.map((num) => {\n          return (\n            <PokemonCard id={num} onClick={handleClick} key={Math.random()} />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Gameboard;\n","import \"./styles/App.css\";\nimport Gameboard from \"./components/Gameboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>\n        <img\n          src=\"https://raw.githubusercontent.com/garyarzuma/memory_game/main/public/images/Pokemon_logo.png\"\n          alt=\"Pokemon!\"\n          className=\"pokemon-logo\"\n        ></img>\n      </h1>\n      <h3>\n        Get points by clicking on an image, but don't click on any more than\n        once!\n      </h3>\n\n      <Gameboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}